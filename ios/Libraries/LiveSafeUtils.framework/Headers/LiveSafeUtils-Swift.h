// Generated by Apple Swift version 4.2 (swiftlang-1000.11.37.1 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import CoreGraphics;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LiveSafeUtils",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSBundle;

SWIFT_CLASS("_TtC13LiveSafeUtils14BaseBundleUtil")
@interface BaseBundleUtil : NSObject
+ (NSString * _Nonnull)getString:(NSString * _Nonnull)stringId SWIFT_WARN_UNUSED_RESULT;
+ (NSBundle * _Nonnull)getCurrentBundle SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13LiveSafeUtils19ButtonConfiguration_")
@protocol ButtonConfiguration
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) void (^ _Nonnull action)(void);
@end


SWIFT_CLASS("_TtC13LiveSafeUtils23BaseButtonConfiguration")
@interface BaseButtonConfiguration : NSObject <ButtonConfiguration>
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) void (^ _Nonnull action)(void);
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title action:(void (^ _Nonnull)(void))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





@interface CLLocation (SWIFT_EXTENSION(LiveSafeUtils))
- (BOOL)hasSameCoordinateAs:(CLLocation * _Nonnull)other SWIFT_WARN_UNUSED_RESULT;
@end


/// Class to manage reporting framework events to the framework’s client
/// application. A client application can inject an a closure which will
/// create a MetricReporter implementation.
SWIFT_CLASS("_TtC13LiveSafeUtils23FrameworkMetricReporter")
@interface FrameworkMetricReporter : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC13LiveSafeUtils15LSFontConstants")
@interface LSFontConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextRegular;)
+ (NSString * _Nonnull)kFontNameAvenirNextRegular SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextItalic;)
+ (NSString * _Nonnull)kFontNameAvenirNextItalic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextBold;)
+ (NSString * _Nonnull)kFontNameAvenirNextBold SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextMedium;)
+ (NSString * _Nonnull)kFontNameAvenirNextMedium SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextHeavy;)
+ (NSString * _Nonnull)kFontNameAvenirNextHeavy SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kFontNameAvenirNextDemiBold;)
+ (NSString * _Nonnull)kFontNameAvenirNextDemiBold SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSURL (SWIFT_EXTENSION(LiveSafeUtils))
/// Property containing the valid parameters in the URL.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable lsQueryParameters;
@end

@class UIViewController;

@interface UIAlertController (SWIFT_EXTENSION(LiveSafeUtils))
/// Present an error alert to the user with a single button “OK”.
/// \param on The ViewController on which to display the alert.
///
/// \param withTitle The title of the alert.
///
/// \param message The body of the alert.
///
+ (void)showErrorAlertOn:(UIViewController * _Nonnull)viewController withTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message actionTitle:(NSString * _Nullable)actionTitle;
@end


@interface UIApplication (SWIFT_EXTENSION(LiveSafeUtils))
+ (UIViewController * _Nullable)topViewController:(UIViewController * _Nullable)base SWIFT_WARN_UNUSED_RESULT;
+ (UIViewController * _Nullable)applicationRootViewController SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIColor (SWIFT_EXTENSION(LiveSafeUtils))
/// Initializes and returns a color object represented by the given hex string (eg. #ff12d3).
- (nonnull instancetype)initWithHexString:(NSString * _Nonnull)hexString;
@end


@interface UIColor (SWIFT_EXTENSION(LiveSafeUtils))
/// Initializes and returns a color object represented by the given RGB values.
- (nonnull instancetype)initWithRedInteger:(NSInteger)redInteger greenInteger:(NSInteger)greenInteger blueInteger:(NSInteger)blueInteger;
/// Initializes and returns a color object represented by the given RGBA values.
- (nonnull instancetype)initWithRedInteger:(NSInteger)redInteger greenInteger:(NSInteger)greenInteger blueInteger:(NSInteger)blueInteger alpha:(CGFloat)alpha;
@end


@interface UIColor (SWIFT_EXTENSION(LiveSafeUtils))
/// The current UIColor with an alpha value of 0.3
@property (nonatomic, readonly, strong) UIColor * _Nonnull disabled;
@end


@interface UIColor (SWIFT_EXTENSION(LiveSafeUtils))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeNewBlue;)
+ (UIColor * _Nonnull)livesafeNewBlue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeNewMediumGrey;)
+ (UIColor * _Nonnull)livesafeNewMediumGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeNavyBlue;)
+ (UIColor * _Nonnull)livesafeNavyBlue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeLightBlue;)
+ (UIColor * _Nonnull)livesafeLightBlue SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeYellow;)
+ (UIColor * _Nonnull)livesafeYellow SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeRed;)
+ (UIColor * _Nonnull)livesafeRed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeDarkGrey;)
+ (UIColor * _Nonnull)livesafeDarkGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeMediumGrey;)
+ (UIColor * _Nonnull)livesafeMediumGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeGrey;)
+ (UIColor * _Nonnull)livesafeGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeLightGrey;)
+ (UIColor * _Nonnull)livesafeLightGrey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull livesafeGreen;)
+ (UIColor * _Nonnull)livesafeGreen SWIFT_WARN_UNUSED_RESULT;
@end






@interface UIFont (SWIFT_EXTENSION(LiveSafeUtils))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIFont * _Nonnull barButtonFont;)
+ (UIFont * _Nonnull)barButtonFont SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(LiveSafeUtils))
- (nullable instancetype)initWithColor:(UIColor * _Nonnull)color size:(CGSize)size;
@end


@interface UIImage (SWIFT_EXTENSION(LiveSafeUtils))
+ (UIImage * _Nonnull)resizeImage:(UIImage * _Nonnull)image toSize:(CGSize)newSize SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(LiveSafeUtils))
+ (UIImage * _Nullable)circularImageWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)maskWithColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIImage (SWIFT_EXTENSION(LiveSafeUtils))
@property (nonatomic, readonly) UIViewContentMode preferredContentMode;
@end




@interface UITextField (SWIFT_EXTENSION(LiveSafeUtils))
/// The text displayed by the text field with any leading and trailing whitespace trimmed.
@property (nonatomic, readonly, copy) NSString * _Nullable trimmedText;
@end


@interface UIView (SWIFT_EXTENSION(LiveSafeUtils))
- (void)addAsSubviewConstrainedToView:(UIView * _Nonnull)containerView;
- (void)constrainToView:(UIView * _Nonnull)containerView;
@end

@class UINavigationController;

@interface UIViewController (SWIFT_EXTENSION(LiveSafeUtils))
- (BOOL)wasPresentedModally SWIFT_WARN_UNUSED_RESULT;
- (void)addTapToHideKeyboard;
- (void)tappedScreenToHideKeyboard;
- (UINavigationController * _Nullable)navigationControllerOfViewController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC13LiveSafeUtils17UserDefaultsStore")
@interface UserDefaultsStore : NSObject
+ (BOOL)storeAnyObject:(id _Nonnull)item error:(NSError * _Nullable * _Nullable)error;
+ (NSString * _Nullable)retrieveJSONStringForObjectWithIdentifier:(NSString * _Nonnull)identifier SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)deleteAnyObject:(id _Nonnull)item error:(NSError * _Nullable * _Nullable)error;
+ (void)deleteValuesForKeys:(NSArray<NSString *> * _Nonnull)keys;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
